labs(x = "trial type",
y = "mean proportion of trials with error", fill = "item axis",
title = "accuracy by trial type") +
# scale_x_discrete(labels = c("HARD", "EASY")) +
# adjust theme parameters
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "bottom",
axis.title.y = element_text(margin = margin(t = 0, r = 15, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 15, r = 0, b = 0, l = 0)),
axis.text.x = element_text(margin = margin(t = -10, r = 0, b = 0, l = 0)))
study_01 %>%
dplyr::select(gesture_axis, item_axis, trial_type) %>%
filter(!is.na(gesture_axis)) %>%
group_by(item_axis, trial_type, gesture_axis) %>%
summarize(N = n()) %>%
mutate(freq = N / sum(N),
pct = round((freq * 100), 0)) %>%
#  select(gesture_axis, item_axis, trial_type) %>%
# filter(!is.na(gesture_axis)) %>%
#count(gesture_axis, item_axis, trial_type) %>%  #%>% group1_count
# mutate(proportion = n/sum(n)) %>%
ggplot(aes(item_axis, freq, fill = gesture_axis)) +
geom_col(aes(width = 0.5),
alpha = 0.75,
position = "stack") +
facet_grid(~ trial_type) +
# set theme
theme_minimal() +
scale_fill_manual("item axis",
values = c("#800000", "#767676", "#350E20", "#FFA319")) +
# add title, axis, and value labels
labs(x = "trial type",
y = "proportion of trials", fill = "item axis",
title = "gesture axis") +
# scale_x_discrete(labels = c("HARD", "EASY")) +
# adjust theme parameters
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "bottom",
axis.title.y = element_text(margin = margin(t = 0, r = 15, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 15, r = 0, b = 0, l = 0)),
axis.text.x = element_text(margin = margin(t = -10, r = 0, b = 0, l = 0)))
sessionInfo()
knitr::opts_chunk$set(echo = TRUE, fig.width = 6, fig.asp = 0.618, echo = FALSE)
library(rmarkdown)
#library(extrafont)
library(ggplot2)
library(ggsignif)
library(plotly)
library(ggraph)
library(igraph)
library(waffle)
library(ggpubr) # using for nested circles? ggarrange
library(cowplot)
library(wesanderson)
library(data.table)
library(tidyverse)
set.seed(1618)
print(sessionInfo())
knitr::opts_chunk$set(echo = TRUE, fig.width = 6, fig.asp = 0.618, echo = FALSE)
library(rmarkdown)
#library(extrafont)
library(ggplot2)
library(ggsignif)
library(plotly)
library(ggraph)
library(igraph)
library(waffle)
library(ggpubr) # using for nested circles? ggarrange
library(cowplot)
library(wesanderson)
library(data.table)
library(tidyverse)
set.seed(1618)
# tidied ELAN data from study 1 (n=24, 960 observations)
study_01 <- read_csv("~/R/Data Viz/fp-ash/data/study-01_level-01-data_2018-05-28.csv")
# encode gesture presence and spatiality as dichotomous indicator variables
study_01 <- study_01 %>%
# encode as data frame
#as_data_frame() %>%
# add dichotomous variables
mutate(GESTURE_PRESENT = if_else(study_01$`gesture_presence` == "yes", 1, 0)) %>%
mutate(SPATIAL_TRIAL = if_else(study_01$trial_type == "spatial", 1, 0)) %>%
mutate(VERTICAL_TRIAL = if_else(study_01$item_axis == "vertical", 1, 0)) %>%
# add difficulty variable based on deSoto (1965)
mutate(deSoto_difficulty = cut(x = correct_deSoto_without_invalid, breaks = c(38.3, 41.5, 60.5, 61.8, 100),
right = FALSE, labels = c("HARDEST", "HARD", "EASY", "EASIEST")))
# select variables of interest
gesture_type_axis <- study_01 %>%
dplyr::select(SUBJ, LIST, trial_number, ITEM_CODE, SPATIAL_TRIAL, VERTICAL_TRIAL, SPATIAL_FIRST,
GESTURE_PRESENT, gesture_axis, ACCURACY,
difficulty_indicator_without_invalid, correct_deSoto_without_invalid, deSoto_difficulty)
prop_gesture_type_axis <- study_01 %>%
dplyr::select(GESTURE_PRESENT, trial_type, item_axis) %>%
dplyr::group_by(trial_type, item_axis) %>%
dplyr::summarize(prop_gesture = sum(GESTURE_PRESENT)/240)
# calculate gesture and accuracy proportions by subject
mean_subject_errors_gestures <- study_01 %>%
dplyr::select(SUBJ, GESTURE_PRESENT, ACCURACY) %>%
dplyr::group_by(SUBJ) %>%
dplyr::summarize(gestures = sum(GESTURE_PRESENT),
percent_gestured = gestures / length(unique(study_01$ITEM_CODE)),
gesture_se = sd(GESTURE_PRESENT)/sqrt(length(unique(study_01$ITEM_CODE))),
errors = length(unique(study_01$ITEM_CODE)) - sum(ACCURACY),
percent_errors = errors / length(unique(study_01$ITEM_CODE)),
error_se = sd(1 - ACCURACY)/sqrt(length(unique(study_01$ITEM_CODE)))
) %>%
as_factor(SUBJ) %>%
# order by proportion
dplyr::arrange(percent_gestured) %>%
# add se variables for gesture production and error
dplyr::mutate(percent_gestured = gestures / length(unique(study_01$ITEM_CODE)),
percent_errors = errors / length(unique(study_01$ITEM_CODE))) %>%
# add variable to relabel x axis sequentially
dplyr::mutate(ID_gestures_ascending = as.integer(seq(1:length(unique(study_01$SUBJ))))) %>%
dplyr::arrange(percent_errors) %>%
dplyr::mutate(ID_errors_ascending = as.integer(seq(1:length(unique(study_01$SUBJ))))) %>%
# could not get color to work without adding a constant
dplyr::mutate(fill_constant = 1)
summary_subj_err_gest <- mean_subject_errors_gestures %>%
dplyr::summarize(mean_gestures = mean(gestures),
mean_percent_gestured = mean(percent_gestured),
mean_gesture_se = mean(gesture_se),
mean_errors = mean(errors),
mean_percent_errors = mean(percent_errors),
mean_error_se = mean(error_se))
# participant means by type and axis conditions
prop_subj_gesture_type_axis <- study_01 %>%
dplyr::select(SUBJ, GESTURE_PRESENT, trial_type, item_axis) %>%
dplyr::group_by(SUBJ, trial_type, item_axis) %>%
dplyr::summarize(prop_gesture = sum(GESTURE_PRESENT)/10)
# no interaction terms
level_01_data <- study_01 %>%
# INDEX VARs
# ITEM: individual stimulus problem numbers
mutate(ITEM = as.integer(ITEM_CODE)) %>%
# LIST
mutate(LIST = LIST) %>%
# TRIAL
mutate(TRIAL = trial_number) %>%
# SUBJECT ID
mutate(ID = SUBJ) %>%
# PRIMARY IVs
# SPATIALITY: spatial trials = 1, non-spatial trials = 0
mutate(SPACE_IV = if_else(study_01$trial_type == "spatial", 1, 0)) %>%
# AXIS: vertical trials = 1, horizontal trials = 0
mutate(AXIS_IV = if_else(study_01$item_axis == "vertical", 1, 0)) %>%
# DIFFICULTY: difficult trials = 2, easy trials = 1, invalid trials = 0
mutate(DIFF_IV = if_else(study_01$DIFFICULTY_with_invalid == "HARD", 2,
if_else(study_01$DIFFICULTY_with_invalid == "EASY", 1, 0))) %>%
# ORDER: spatial first = 1, non-spatial first = 0
mutate(ORDER = as.integer(if_else(study_01$SPATIAL_FIRST == 1, 1, 0))) %>%
# SECONDARY IVs ## leaving this out for now
# difficulty based on deSoto (1965): HARDEST = 4, HARD = 3, EASY = 2, EASIEST = 1
#mutate(deSoto_difficulty_IV2 = cut(x = correct_deSoto_without_invalid, breaks = c(38.3, 41.5, 60.5, 61.8, 100),
#right = FALSE, labels = c(4, 3, 2, 1))) %>%
# DVs
# GESTURE_PRESENCE: present = 1, absent = 0
mutate(GESTURE_DV = if_else(study_01$gesture_presence == "yes", 1, 0)) %>%
# GESTURE_AXIS: lateral = 1, vertical = 2, saggital = 3, other/unclear = 4, ERROR = 5
mutate(AXIS_DV = if_else(study_01$gesture_axis == "lateral", 1,
if_else(study_01$gesture_axis == "vertical", 2,
if_else(study_01$gesture_axis == "sagittal", 3,
if_else(study_01$gesture_axis == "other/unclear", 4, 5))))) %>%
# ACCURACY: correct = 1, incorrect = 0
mutate(ACCURACY_DV = if_else(study_01$ACCURACY == 1, 1, 0)) %>%
# SELECT VARIABLES
dplyr::select(ITEM, LIST, TRIAL, ID,
SPACE_IV, AXIS_IV, DIFF_IV,
ORDER, # deSoto_difficulty_IV2,
GESTURE_DV, AXIS_DV, ACCURACY_DV)
# calculate gesture and accuracy proportions by subject
X <- level_01_data %>%
#dplyr::select(SUBJ, GESTURE_DV, ACCURACY_DV) %>%
dplyr::group_by(ID, SPACE_IV) %>%
dplyr::summarize(gestures = sum(GESTURE_DV),
percent_gestured = gestures / (length(unique(ITEM))*2),
gesture_se = sd(GESTURE_DV)/sqrt((length(unique(ITEM)))*2),
errors = length(unique(ITEM)) - sum(ACCURACY_DV),
percent_errors = errors / (length(unique(ITEM))*2),
error_se = sd(1 - ACCURACY_DV)/sqrt((length(unique(ITEM)))*2)
) %>%
as_factor(ID)
# table with standard errors (for plotting)
table_gesture_type_axis <- study_01 %>%
dplyr::select(GESTURE_PRESENT, trial_type, item_axis) %>%
data.table()
## aovSufficient(prop_gesture ~ trial_type + item_axis, data = prop_SUBJ_gesture_type_axis)
tbl_gesture_type_axis <- table_gesture_type_axis[, list(mean = mean(GESTURE_PRESENT),
sd = sd(GESTURE_PRESENT),
se = sqrt(var(GESTURE_PRESENT)/length(GESTURE_PRESENT)),
se_test = sd(GESTURE_PRESENT)/sqrt(240),
#95% confidence intervals of the mean (&plusmn;2se)
ci_min = mean(GESTURE_PRESENT) - 2*(sd(GESTURE_PRESENT)/sqrt(240)),
ci_max = mean(GESTURE_PRESENT) + 2*(sd(GESTURE_PRESENT)/sqrt(240))),
by=list(trial_type, item_axis)]
mean_subject_errors_gestures %>%
ggplot() +
geom_col(aes(x = ID_gestures_ascending, y = percent_gestured, # group = SUBJ,
fill = as.factor(fill_constant), alpha = .75)) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(breaks = c(seq(1:24)), expand = c(0, 0)) +
# change color scheme of fill colors
scale_fill_manual("fill_constant", values ="#a2adba") +
theme_light(base_family = "Serif") +
theme(panel.grid.major.x = element_blank(), # remove vertical grid lines
panel.grid.minor.x = element_blank(), # remove vertical grid lines
panel.grid.minor.y = element_blank(), # remove minor horizontal grid lines
# remove legends (unnecessary here)
legend.position = "none",
plot.title = element_text(margin = margin(t = 0, r = 0, b = 20, l = 0)),
axis.title.y = element_text(margin = margin(t = 0, r = 15, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 15, r = 0, b = 0, l = 0)),
panel.border = element_blank(), # remove outer panel border
axis.ticks.y = element_blank(), # remove ticks from y axis
text = element_text(family = "Arial")) +
ggtitle('PARTICIPANT GESTURE PRODUCTION') +
xlab('participant (arranged by ascending gesture production)') +
ylab('proportion of trials with gesture')
production_histo_2 <- X %>%
ggplot(aes(alpha = .85)) +
geom_col(aes(x = reorder(ID, percent_gestured), y = percent_gestured, #group = SUBJ,
fill = as.factor(SPACE_IV))) +
# change color scheme of fill colors
scale_fill_manual(name = "relation type",
# guide = guide_legend(reverse=TRUE) # reverse order of legend key (off)
labels = c("non-spatial", "spatial"),
values = c("#8da0cb", "#66c2a5")) +
scale_y_continuous(expand = c(0, 0)) +
geom_hline(aes(yintercept = mean(percent_gestured)*2), color = "#717982") + #a2adba too light, took darker shade
# temporarily remove ribbon (need to fix error margin)
#   annotate('ribbon', x = c(-Inf, Inf),
#           ymin = summary_subj_err_gest$mean_percent_gestured - summary_subj_err_gest$mean_gesture_se,
#          ymax = summary_subj_err_gest$mean_percent_gestured + summary_subj_err_gest$mean_gesture_se,
#         alpha = 0.2, fill = "#628B9F") +
geom_text(x = 4, y = 0.56, aes(label = "mean = 0.524"), color = "#717982") + #a2adba too light, took darker shade
theme_light(base_family = "Serif") +
theme(panel.grid.major.x = element_blank(), # remove vertical grid lines
panel.grid.minor.x = element_blank(), # remove vertical grid lines
panel.grid.minor.y = element_blank(), # remove minor horizontal grid lines
# panel.grid.major.y = element_line(2),
legend.position = "right",
plot.title = element_text(margin = margin(t = 0, r = 0, b = 30, l = 0)),
axis.title.y = element_text(margin = margin(t = 0, r = 15, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = -5, l = 0)),
panel.border = element_blank(), # remove outer panel border
axis.ticks.y = element_blank(), # remove ticks from y axis
text = element_text(family = "Times")) +
guides(alpha = FALSE) + # remove alpha legend (doesn't provide useful information)
ggtitle('PARTICIPANT GESTURE PRODUCTION') +
xlab('participant id (arranged by total gesture production)\n') +
ylab('proportion of trials with gesture')
production_histo_2
ggplotly(production_histo_2, tooltip = c("total mean", "spatial mean", "percent_gestured", "SPACE_IV"))
bar_chart_1 <- prop_gesture_type_axis %>%
full_join(tbl_gesture_type_axis) %>%
ggplot(aes(item_axis, prop_gesture,
fill = trial_type)) +
geom_col(aes(width = 0.5),
alpha = 0.75,
position = position_dodge(width = 0.55)) +
#     geom_point(data = prop_SUBJ_gesture_type_axis,
#               position = position_jitterdodge(jitter.width = 0.15),
#              aes(color = item_axis),
#             size = 1.5, alpha = 0.7, shape = 21, show_guide = FALSE) +  #, color = "#736A6A") +
# add 95% confidence interval error bars
geom_errorbar(aes(ymin = ci_min, ymax = ci_max),
width = 0.1, position = position_dodge(0.55),
color = "#767676") +
# add numerical values onto bars
geom_text(aes(label = sprintf("%0.2f", round(prop_gesture, digits = 2)),
y = prop_gesture + 0.095,
group = trial_type,
fontface = "bold"),
position = position_dodge(0.55),
color = "#717982") +
# geom_signif(comparisons = list(c("spatial", "non-spatial")),
#            map_signif_level = TRUE, color = "#717982") +
theme_minimal(base_family = "serif") + # set theme and serif font
scale_fill_manual("item axis",
values = c("#8da0cb", "#66c2a5")) +
#      scale_color_manual("item axis",
#                      values = c("#66c2a5", "#8da0cb")) +
# add title, axis, and value labels
labs(x = "trial type",
y = "proportion of trials with gesture", fill = "item axis",
title = "GESTURE PRODUCTION BY TRIAL TYPE") +
# scale_x_discrete(labels = c("HARD", "EASY")) +
# adjust theme parameters
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "bottom",
axis.title.y = element_text(margin = margin(t = 0, r = 15, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 15, r = 0, b = 0, l = 0)),
axis.text.x = element_text(margin = margin(t = -10, r = 0, b = 0, l = 0)))
bar_chart_1
box_plot_01 <- ggplot(data = prop_subj_gesture_type_axis, aes(item_axis, prop_gesture,
fill = trial_type)) +
geom_boxplot(aes(width = 0.5),
alpha = 0.8,
position = "dodge") +
geom_point(data = prop_subj_gesture_type_axis,
position = position_jitterdodge(jitter.width = 0.15),
aes(color = "#a2adba"),
size = 2, alpha = 0.55, shape = 16, #show_guide = FALSE,
color = "#40454a") +  #, color = "#736A6A") +
theme_minimal() +
scale_fill_manual("item axis", values = c("#8da0cb", "#66c2a5")) +
#    scale_color_manual("item axis",
#                     values = wes_palette(n = 4, name = "Zissou1")[1:4]) +
# add title, axis, and value labels
labs(x = "trial type",
y = "proportion of trials with gesture", fill = "item axis",
title = "gesture production by trial type") +
# scale_x_discrete(labels = c("HARD", "EASY")) +
# adjust theme parameters
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "right",
axis.title.y = element_text(margin = margin(t = 0, r = 15, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 15, r = 0, b = 0, l = 0)),
axis.text.x = element_text(margin = margin(t = -10, r = 0, b = 0, l = 0)))
box_plot_01
gesture_proportion_violin <- prop_subj_gesture_type_axis %>%
plot_ly(type = 'violin') %>%
add_trace(
x = ~ item_axis[prop_subj_gesture_type_axis$trial_type == 'spatial'],
y = ~ prop_gesture[prop_subj_gesture_type_axis$trial_type == 'spatial'],
legendgroup = 'spatial',
scalegroup = 'spatial',
name = 'spatial',
side = 'negative', # left side
opacity = 0.8,
box = list(
visible = F
),
meanline = list(
visible = T
),
line = list(
color = '#66c2a5' # selected from qualitative colorblind safe scheme from Color Brewer
)
) %>%
add_trace(
x = ~ item_axis[prop_subj_gesture_type_axis$trial_type == 'non-spatial'],
y = ~ prop_gesture[prop_subj_gesture_type_axis$trial_type == 'non-spatial'],
legendgroup = 'non-spatial',
scalegroup = 'non-spatial',
name = 'non-spatial',
side = 'positive', # right side
opacity = 0.7,
box = list(
visible = F
),
meanline = list(
visible = T
),
line = list(
color = '#8da0cb' # selected from qualitative colorblind safe scheme from Color Brewer
)
) %>%
layout(
title = "Gesture Production by Trial Type<br><i>(proportion observations are grouped by subject)",
xaxis = list(
title = ""
),
yaxis = list(
title = "proportion of trials with gesture",
zeroline = F,
range = c(0, 1)
),
violingap = 0,
violingroupgap = 0.1,
violinmode = 'overlay', # because violins are split they need to be overlaid
tracegroupgap = 1,
margin = list(
l = -1,
r = 0,
b = -1,
t = -5,
pad = 0
)
gesture_proportion_violin
#plotly_IMAGE(gesture_proportion_violin, width = 1200, height = 700, format = "png", scale = 2,
#             out_file = "/Users/misha/R/Data Viz/fp-ash/resources/gest_space_violin.png")
print(sessionInfo())
# create hierarchical data frame of IVs
branch_1 <- data.frame(from = "origin", to = c("spatial", "non-spatial"))
branch_2 <- data.frame(from = rep(branch_1$to, each = 2), to = paste(c("vertical", "horizontal"), seq(1:4), sep="_"))
branch_3 <- data.frame(from = rep(branch_2$to, each = 3), to = paste(c("hard", "easy", "invalid"), seq(1:12), sep="_"))
edges <- rbind(branch_1, branch_2, branch_3)
### add frame with node information for labels and color info
#labels <- edges %>%
#  mutate(name = as.character(to)) %>%
#  separate(col = name, into = c("label", "index"), sep = "_")
# graph object
tree <- graph_from_data_frame(edges)
# dendrogram
iv_dentro <- ggraph(tree, layout = 'dendrogram', circular = FALSE) +
geom_edge_diagonal() +
geom_node_point() + #color = "#c7d4b6"
#geom_node_text(aes(color = labels$label) , angle=90 , hjust=1, nudge_y=-0.1) +
#geom_node_text(aes(label = labels$label, color = labels$label) , angle=90 , hjust=1, nudge_y=-0.1) +
#geom_node_point(aes(filter=leaf, size=value, color=group) , alpha=0.6) +
theme_void()
# add fill aesthetic identifying relevant groups!
iv_circles <- ggraph(tree, 'circlepack') +
geom_node_circle(aes(), size = 0.25, n = 50) +
coord_fixed() +
theme_void()
ggarrange(iv_dentro, iv_circles,
labels = c("tree", "nested circles"),
ncol = 2, nrow = 1)
study_01 %>%
dplyr::select(gesture_axis, item_axis, trial_type) %>%
filter(!is.na(gesture_axis)) %>%
group_by(item_axis, trial_type, gesture_axis) %>%
summarize(N = n()) %>%
mutate(freq = N / sum(N),
pct = round((freq * 100), 0)) %>%
#  select(gesture_axis, item_axis, trial_type) %>%
# filter(!is.na(gesture_axis)) %>%
#count(gesture_axis, item_axis, trial_type) %>%  #%>% group1_count
# mutate(proportion = n/sum(n)) %>%
ggplot(aes(item_axis, freq, fill = gesture_axis)) +
geom_col(aes(width = 0.5),
alpha = 0.75,
position = "stack") +
facet_grid(~ trial_type) +
# set theme
theme_minimal() +
scale_fill_manual("item axis",
values = c("#800000", "#767676", "#350E20", "#FFA319")) +
# add title, axis, and value labels
labs(x = "trial type",
y = "proportion of trials", fill = "item axis",
title = "gesture axis") +
# scale_x_discrete(labels = c("HARD", "EASY")) +
# adjust theme parameters
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "bottom",
axis.title.y = element_text(margin = margin(t = 0, r = 15, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 15, r = 0, b = 0, l = 0)),
axis.text.x = element_text(margin = margin(t = -10, r = 0, b = 0, l = 0)))
# referencing image doesn't work with tilde expansion
# use relative paths internal to repository!
study_01 %>%
dplyr::select(gesture_axis, item_axis, trial_type) %>%
filter(!is.na(gesture_axis)) %>%
group_by(item_axis, trial_type, gesture_axis) %>%
summarize(N = n()) %>%
mutate(freq = N / sum(N),
pct = round((freq * 100), 0)) %>%
#  select(gesture_axis, item_axis, trial_type) %>%
# filter(!is.na(gesture_axis)) %>%
#count(gesture_axis, item_axis, trial_type) %>%  #%>% group1_count
# mutate(proportion = n/sum(n)) %>%
ggplot(aes(item_axis, freq, fill = gesture_axis)) +
geom_col(aes(width = 0.5),
alpha = 0.75,
position = "stack") +
facet_grid(~ trial_type) +
# set theme
theme_minimal() +
scale_fill_manual("item axis",
values = c("#800000", "#767676", "#350E20", "#FFA319")) +
# add title, axis, and value labels
labs(x = "trial type",
y = "proportion of trials", fill = "item axis",
title = "gesture axis") +
# scale_x_discrete(labels = c("HARD", "EASY")) +
# adjust theme parameters
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "bottom",
axis.title.y = element_text(margin = margin(t = 0, r = 15, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 15, r = 0, b = 0, l = 0)),
axis.text.x = element_text(margin = margin(t = -10, r = 0, b = 0, l = 0)))
study_01 %>%
dplyr::select(gesture_axis, item_axis, trial_type) %>%
filter(!is.na(gesture_axis)) %>%
group_by(item_axis, trial_type, gesture_axis) %>%
summarize(N = n()) %>%
mutate(freq = N / sum(N),
pct = round((freq * 100), 0)) %>%
#  select(gesture_axis, item_axis, trial_type) %>%
# filter(!is.na(gesture_axis)) %>%
#count(gesture_axis, item_axis, trial_type) %>%  #%>% group1_count
# mutate(proportion = n/sum(n)) %>%
ggplot(aes(item_axis, freq, fill = gesture_axis)) +
geom_col(aes(width = 0.5),
alpha = 0.75,
position = "stack") +
facet_grid(~ trial_type) +
# set theme
theme_minimal() +
scale_fill_manual("item axis",
values = c("#800000", "#767676", "#350E20", "#FFA319")) +
# add title, axis, and value labels
labs(x = "trial type",
y = "proportion of trials", fill = "item axis",
title = "gesture axis") +
# scale_x_discrete(labels = c("HARD", "EASY")) +
# adjust theme parameters
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "bottom",
axis.title.y = element_text(margin = margin(t = 0, r = 15, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 15, r = 0, b = 0, l = 0)),
axis.text.x = element_text(margin = margin(t = -10, r = 0, b = 0, l = 0)))
